помни, что в drawLine можно делать вот так. 
Не просто или переменная, или число, а даже вот вот так вот:

g.drawLine(  21, sideDist/2, atopDist, atopDist + 15);


// каждая строка кода вызова - это точка. точку дают два числа: позиция от верха до низа и сбоку влево или вправо
// g - это холст, то на чем мы делаем отметку точек. первая пара чисел - от, 2-я пара числе - до

//в чем хитрость аргумента Graphics g?
//один вызов метода через пейнт рисует одну-единственную линию на панели
//разберем еще раз где что рисвется


//описание координат на английском.

Draws a line, using the current color, 
between the points (x1, y1) and (x2, y2) in this graphics 
context's coordinate system.
Parameters:

x1 the first point's x coordinate.
y1 the first point's y coordinate.
x2 the second point's x coordinate.
y2 the second point's y coordinate.



// просто вариант кода.

//вызов метода

toDrawLine (g, 5, 5);

//дравМайЛайн (графикс жы, инт топ, инт лефт)

  public void toDrawLine(Graphics g, int top, int left){

	  g.drawLine(5, top, 5, left)

}

//разбор координат на примере.

    // 1(№1) - точка-дистанция  слева направо, от края панели (см. доску); 
    //(№2)(atopDist) -  сверху вниз расстояние от края панели (см. доску);
    //(№3) - длинна линии от точки №1-№2 вниз по панели (см. доску);
    //(№4)(sideDist) - точка-дистанция слева-направо от кра панели в которую упирается нижняя точка линии (см.доску)




	  
    g.drawLine(10, 10, inX, inY);
    g.drawLine(10, 10, 10, 30);
    g.drawLine(30, 10, 30, 30);
    g.drawLine(10, 30, 30, 30);
    
    g.drawLine(50, 20, 70, 20);
    g.drawLine(70, 20, 70, 40);
    g.drawLine(70, 40, 50, 40);
    g.drawLine(50, 40, 50, 20);
    
    g.drawLine(100, 60, 140, 60);
    g.drawLine(140, 60, 140, 100);
    g.drawLine(140, 100, 100, 100);
    g.drawLine(100, 100, 100, 60);

	    g.drawLine(inX, inY, inX+30, inY);//верх, слева направо
	    g.drawLine(inX+30, inY, inX+30, inY+30);//правая сторона, сверху вниз
	    g.drawLine(inX+30, inY+30, inX, inY+30);//низ, справа налево
	    g.drawLine(inX, inY+30, inX, inY);//левая сторона, снизу вверх
    



_________________________________________ 


drawCage( Graphics g, int x, int y){

    //рисуем внешний квадрат
    //четыре дравлайна

    //рисуем внутренний квадрат
    //еще четыре дравлайна

    //рисуем ромб
    //и еще четыре дравлайна
}
предположим, что та точка, от которой мы рисуем картинку - это верхняя левая точка моей картинки.

нам надо нарисовать линию от нее вправо. 
дравЛайн (х, у, х + 20, у)

нам надо нарисовать линию от нее вниз
дравЛайн х, у, х,у + 20


и рисуем сразу стороны внутреннего квадрата
дравлайн х+2, у+2, х+18, у + 2

дравЛайн х+2, у + 2, х + 2, у + 18


и полирнем одной стороной ромба

дравЛайн х, у + 10, х + 10, у

__________________________________________




старый версус
 public void toDrawQuadrate(Graphics g, int inX, int inY){

	    g.drawLine(inX, inY, inX+20, inY);//верх, слева направо
	    g.drawLine(inX+20, inY, inX+20, inY+20);//правая сторона, сверху вниз
	    g.drawLine(inX+20, inY+20, inX, inY+20);//низ, справа налево
	    g.drawLine(inX, inY+20, inX, inY);//левая сторона, снизу вверх  
   
	    g.drawLine(inX, inY, inX+20, inY);//верх, слева направо
	    g.drawLine(inX+20, inY, inX+20, inY+20);//правая сторона, сверху вниз
	    g.drawLine(inX+20, inY+20, inX, inY+20);//низ, справа налево
	    g.drawLine(inX, inY+20, inX, inY);//левая сторона, снизу вверх  
   
  
  }

  public void toDrawRomb(Graphics g, int inX, int inY){
	  
	         g.drawLine(inX, inY, inX+15, inY+15);//вершина, боковая линия вправо и вниз
		 g.drawLine(inX+15, inY+15, inX, inY+30);//острый угол, право и вниз  
		 g.drawLine(inX, inY+30, inX-15, inY+15);//линия боковая вверх, влево
		 g.drawLine(inX-15, inY+15, inX, inY);//острый угол, вверх влево
		
  }



РОМБИК
	   g.drawLine(inX, inY+15, inX+15, inY);
	   g.drawLine(inX+15, inY, inX+30, inY+15);  
	   g.drawLine(inX+30, inY+15, inX+15, inY+30);
	   g.drawLine(inX+15, inY+30, inX, inY+15);




 for (int x = 0; x < 300; x += 30){
        for (int y = 0; y < 300; y += 30){
        	
        	toDrawQuadrate(g, x, y);
        }



public void toDrawEnemy(Graphics g, int inX, int inY){//рисуем вражеский отряд (или просто отряд)
	
	  g.drawOval(inX, inY, 4, 4);
	 
	  g.drawLine(inX+4, inY+4, inX+10, inY+4);
	  //g.drawLine(inX+10, inY, inX+4, inY+10);
	  //g.drawLine(inX+4, inY+10, inX+10, inY+10);
	  
	  //g.drawLine(inX, inY, inX-3, inY+5);
	  //g.drawLine(inX, inY, inX-3, inY+5);
	  //g.drawLine(inX+10, inY, inX+11, inY+3);
	  //g.drawLine(inX+11, inY+3, inX+17, inY-8);
	  //g.drawLine(inX+12, inY-2, inX+15, inY+1);
	 
	}

  public void toDrawDoor(Graphics g, int inX, int inY){//рисуем дверь
	  g.drawLine(inX, inY, inX+19, inY);
	  g.drawLine(inX+19, inY, inX+19, inY+23);
	  g.drawLine(inX+19, inY+23, inX, inY+23);
	  g.drawLine(inX, inY+23, inX, inY);
	  g.drawLine(inX+2, inY+23, inX+2, inY);
	  g.drawLine(inX+15, inY+13, inX+15, inY+10);
  }
  public void toDrawChest(Graphics g, int inX, int inY){//рисуем сундук
	  
	  g.drawLine(inX+3, inY-3, inX+17, inY-3);
	  g.drawLine(inX, inY, inX+3, inY-3);
	  g.drawLine(inX+17, inY-3, inX+20, inY);
	 
	  g.drawLine(inX, inY, inX+20, inY);
	  g.drawLine(inX+20, inY, inX+20, inY+16);
	  g.drawLine(inX+20, inY+15, inX, inY+15);
	  g.drawLine(inX, inY+16, inX, inY);
	  
	  g.drawLine(inX+2, inY+2, inX+18, inY+2);
	  g.drawLine(inX+18, inY+2, inX+18, inY+13);
	  g.drawLine(inX+18, inY+13, inX+2, inY+13);
	  g.drawLine(inX+2, inY+13, inX+2, inY+2);
	  
}